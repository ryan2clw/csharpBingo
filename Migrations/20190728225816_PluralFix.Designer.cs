// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace SpaBingo.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190728225816_PluralFix")]
    partial class PluralFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BallMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BallId");

                    b.Property<int>("MatchId");

                    b.HasKey("Id");

                    b.HasIndex("BallId");

                    b.HasIndex("MatchId");

                    b.ToTable("BallMatch");
                });

            modelBuilder.Entity("WebApi.Entities.Ball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPlayed");

                    b.Property<string>("NumValue");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Balls");
                });

            modelBuilder.Entity("WebApi.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("WebApi.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("B");

                    b.Property<int>("CardID");

                    b.Property<string>("G");

                    b.Property<string>("I");

                    b.Property<string>("N");

                    b.Property<string>("O");

                    b.HasKey("Id");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("WebApi.Entities.Row", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("B");

                    b.Property<int>("CardID");

                    b.Property<string>("G");

                    b.Property<string>("I");

                    b.Property<string>("N");

                    b.Property<string>("O");

                    b.HasKey("Id");

                    b.HasIndex("CardID");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("BallMatch", b =>
                {
                    b.HasOne("WebApi.Entities.Ball", "Ball")
                        .WithMany("BallMatch")
                        .HasForeignKey("BallId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApi.Entities.Match", "Match")
                        .WithMany("BallMatch")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Entities.Row", b =>
                {
                    b.HasOne("WebApi.Entities.Card")
                        .WithMany("Rows")
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
